version: 2
jobs:
  test:
    docker:
      - image: circleci/node:14
    steps:
      - add_ssh_keys:
          fingerprints:
            - '26:cc:64:22:a0:8a:08:fe:a9:26:ab:5f:7e:88:e9:2c'
      - checkout
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - run: yarn build
      - run: yarn lint
      - run: yarn test
  pre_release:
    docker:
      - image: circleci/node:14
    steps:
      - add_ssh_keys:
          fingerprints:
            - '26:cc:64:22:a0:8a:08:fe:a9:26:ab:5f:7e:88:e9:2c'
      - checkout
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - run: yarn build
      - run: yarn bootstrap
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: export SHA=$(git rev-parse --short HEAD) && npm run publish -- prerelease --yes --preid pre-$SHA --message "%s [skip ci]" --no-git-tag-version --no-push --dist-tag canary
  dev_release:
    docker:
      - image: circleci/node:14
    steps:
      - add_ssh_keys:
          fingerprints:
            - '26:cc:64:22:a0:8a:08:fe:a9:26:ab:5f:7e:88:e9:2c'
      - checkout
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - run: yarn build
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npm run publish -- --yes --force-publish --npm-tag beta --message "%s [skip ci]"
  prod_release:
    docker:
      - image: circleci/node:14
    steps:
      - add_ssh_keys:
          fingerprints:
            - '26:cc:64:22:a0:8a:08:fe:a9:26:ab:5f:7e:88:e9:2c'
      - checkout
      - run: yarn install --frozen-lockfile
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npx lerna exec --no-bail --no-private --no-sort --stream -- '[ -n "$(npm v . dist-tags.beta)" ] && npm dist-tag add ${LERNA_PACKAGE_NAME}@$(npm v . dist-tags.beta) latest'
workflows:
  version: 2
  do_build:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
      - pre_release:
          context: public_packages
          filters:
            branches:
              only:
                - /prerelease\/.*/
      - dev_release:
          requires:
            - test
          context: public_packages
          filters:
            branches:
              only:
                - dev
      - prod_release:
          context: public_packages
          filters:
            branches:
              only:
                - master
